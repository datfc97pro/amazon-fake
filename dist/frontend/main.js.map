{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/address/address.component.html","webpack:///./src/app/address/address.component.scss","webpack:///./src/app/address/address.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/cart/cart.component.html","webpack:///./src/app/cart/cart.component.scss","webpack:///./src/app/cart/cart.component.ts","webpack:///./src/app/categories/categories.component.html","webpack:///./src/app/categories/categories.component.scss","webpack:///./src/app/categories/categories.component.ts","webpack:///./src/app/category/category.component.html","webpack:///./src/app/category/category.component.scss","webpack:///./src/app/category/category.component.ts","webpack:///./src/app/data.service.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/message/message.component.html","webpack:///./src/app/message/message.component.scss","webpack:///./src/app/message/message.component.ts","webpack:///./src/app/my-products/my-products.component.html","webpack:///./src/app/my-products/my-products.component.scss","webpack:///./src/app/my-products/my-products.component.ts","webpack:///./src/app/portproduct/portproduct.component.html","webpack:///./src/app/portproduct/portproduct.component.scss","webpack:///./src/app/portproduct/portproduct.component.ts","webpack:///./src/app/product/product.component.html","webpack:///./src/app/product/product.component.scss","webpack:///./src/app/product/product.component.ts","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.scss","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/registration/registration.component.scss","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/app/rest-api.service.ts","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.scss","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/settings/settings.component.html","webpack:///./src/app/settings/settings.component.scss","webpack:///./src/app/settings/settings.component.ts","webpack:///./src/app/token.interceptor.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,6sF;;;;;;;;;;;ACAA,+DAA+D,+I;;;;;;;;;;;;;;;;;;;ACAb;AACJ;AACO;AAOrD;IAKE,0BACU,WAAwB,EACxB,WAA2B;QAD3B,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAgB;QANrC,gBAAW,GAAG,KAAK,CAAC;IAOjB,CAAC;IAEJ,mCAAQ,GAAR;QAAA,iBAiBC;QAhBC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,SAAS,CACrD,cAAI;YACF,IACE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,KAAK,IAAI;gBACxC,KAAI,CAAC,WAAW,CAAC,OAAO,KAAK,EAAE,EAC/B;gBACA,KAAI,CAAC,WAAW,CAAC,OAAO,CACtB,iFAAiF,CAClF,CAAC;aACH;YACD,KAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QACxC,CAAC,EACD,eAAK;YACH,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,wCAAa,GAAb;QAAA,iBAkBC;QAjBC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW;aACb,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,cAAc,CAAC;aAClD,SAAS,CACR,aAAG;YACD,GAAG,CAAC,SAAS,CAAC;gBACZ,CAAC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;oBACzC,KAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;gBAChC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC;QAC7C,CAAC,EACD,eAAK;YACH,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3C,CAAC,EACD;YACE,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC,CACF,CAAC;IACN,CAAC;IA/CU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAExC,CAAC;+EAOuB,yDAAW;YACX,gEAAc;OAP1B,gBAAgB,CAgD5B;IAAD,uBAAC;CAAA;AAhD4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTY;AACc;AACD;AACwB;AACrB;AAChB;AACsB;AACG;AACH;AACS;AACG;AACD;AACR;AACH;AACH;AACN;AAEtD,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAE;IACtC;QACE,IAAI,EAAE,YAAY;QAClB,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,qFAAmB,EAAE;YAC5C,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,+EAAiB,EAAE;SAC9C;KACF;IACD;QACE,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,0FAAqB;QAChC,WAAW,EAAE,CAAC,qDAAS,CAAC;KACzB;IACD,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,mEAAa,EAAE;IAC1C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,yEAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,4EAAgB,EAAE;IACpD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAE;IACtE;QACE,IAAI,EAAE,SAAS;QACf,WAAW,EAAE,CAAC,qDAAS,CAAC;QACxB,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,2EAAgB,EAAE;YACzC,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;YAClD,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;YAChD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,wFAAoB,EAAE;YACxD,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,uFAAmB,EAAE;SACvD;KACF;IACD,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE;CAC/B,CAAC;AAMF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;ACrD7B,0dAA0d,mBAAmB,2oCAA2oC,yBAAyB,2LAA2L,8TAA8T,iTAAiT,YAAY,0QAA0Q,0rBAA0rB,yBAAyB,sTAAsT,GAAG,sBAAsB,0C;;;;;;;;;;;ACAnvH,8BAA8B,oBAAoB,iBAAiB,8BAA8B,qBAAqB,oBAAoB,qBAAqB,qBAAqB,qCAAqC,wCAAwC,EAAE,WAAW,gBAAgB,EAAE,+CAA+C,+0B;;;;;;;;;;;;;;;;;;;ACA7R;AACT;AACI;AAO7C;IAKE,sBAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAJpE,eAAU,GAAG,EAAE,CAAC;QAChB,gBAAW,GAAY,IAAI,CAAC;QAC5B,SAAI,GAAS,IAAI,IAAI,EAAE,CAAC;QAGtB,sCAAsC;IACxC,CAAC;IAED,+BAAQ,GAAR;QACE,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC;IACjE,CAAC;IAED,sBAAI,+BAAK;aAAT;YACE,OAAO,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QACvC,CAAC;;;OAAA;IAED,+BAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,oCAAa,GAAb,UAAc,QAAQ;QACpB,QAAQ,CAAC,KAAK,EAAE,CAAC;IACnB,CAAC;IAED,6BAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,EAAE,CAAC;QAC3B,YAAY,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,6BAAM,GAAN;QACE,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;SAC9D;IACH,CAAC;IArCU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAM4B,sDAAM,EAAuB,yDAAW;OALzD,YAAY,CAsCxB;IAAD,mBAAC;CAAA;AAtCwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTkD;AAC9B;AACa;AACjB;AAEe;AACT;AACQ;AACD;AACS;AACe;AACrB;AACF;AACd;AACsB;AACG;AACH;AACS;AACG;AACD;AACR;AACH;AACH;AACF;AACJ;AAsCtD;IAAA;IAAwB,CAAC;IAAZ,SAAS;QApCrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,kEAAa;gBACb,2EAAgB;gBAChB,2FAAqB;gBACrB,sEAAc;gBACd,4EAAgB;gBAChB,+EAAiB;gBACjB,4EAAgB;gBAChB,qFAAmB;gBACnB,wFAAoB;gBACpB,uFAAmB;gBACnB,+EAAiB;gBACjB,4EAAgB;gBAChB,yEAAe;gBACf,mEAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;gBACX,qEAAgB;gBAChB,oEAAS,CAAC,OAAO,EAAE;gBACnB,wEAAoB;aACrB;YACD,SAAS,EAAE;gBACT,sDAAS;gBACT;oBACE,OAAO,EAAE,sEAAiB;oBAC1B,QAAQ,EAAE,oEAAgB;oBAC1B,KAAK,EAAE,IAAI;iBACZ;aACF;YACD,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAG;IAAD,gBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;AC9DqB;AAOlB;AAMzB;IACE,mBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAEtC,+BAAW,GAAX,UACE,IAA4B,EAC5B,KAA0B;QAM1B,IAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACjC,OAAO,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC;gBACrC,CAAC,CAAC,IAAI;gBACN,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;SAC1C;aAAM;YACL,OAAO,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC;gBACrC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC;gBACtC,CAAC,CAAC,IAAI,CAAC;SACV;IACH,CAAC;IApBU,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAE4B,sDAAM;OADvB,SAAS,CAqBrB;IAAD,gBAAC;CAAA;AArBqB;;;;;;;;;;;;ACbtB,60BAA60B,4BAA4B,oNAAoN,YAAY,qDAAqD,cAAc,wQAAwQ,YAAY,KAAK,cAAc,0GAA0G,mBAAmB,6GAA6G,sBAAsB,iQAAiQ,yBAAyB,ifAAif,gDAAgD,4PAA4P,wDAAwD,yV;;;;;;;;;;;ACAlyF,uFAAuF,6BAA6B,cAAc,EAAE,+CAA+C,+e;;;;;;;;;;;;;;;;;;;;;ACAlH;AACnB;AACO;AACZ;AAIb;AAO5B;IAME,uBACU,WAAwB,EACxB,WAA2B,EAC3B,oBAA0C,EAC1C,MAAc;QAHd,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAgB;QAC3B,yBAAoB,GAApB,oBAAoB,CAAsB;QAC1C,WAAM,GAAN,MAAM,CAAQ;QATxB,gBAAW,GAAG,KAAK,CAAC;QAGpB,eAAU,GAAG,EAAE,CAAC;IAOb,CAAC;IAEG,uCAAe,GAAtB;QAAA,iBAsCC;QArCC,IAAI,CAAC,oBAAoB;aACtB,aAAa,CAAC;YACb,GAAG,EAAE,kCAAkC;YACvC,KAAK,EAAE,qBAAqB;YAC5B,MAAM,EAAE,MAAM;YACd,KAAK,EAAE,qBAAW;gBAChB,IAAI,QAAQ,CAAC;gBACb,QAAQ,GAAG,EAAE,CAAC;gBACd,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,KAAK;oBAC9B,QAAQ,CAAC,IAAI,CAAC;wBACZ,OAAO,EAAE,CAAC,CAAC,KAAK,CAAC;wBACjB,QAAQ,EAAE,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC;qBACjC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBAEH,KAAI,CAAC,WAAW;qBACb,IAAI,CAAC,cAAc,EAAE;oBACpB,UAAU,EAAE,KAAI,CAAC,SAAS;oBAC1B,QAAQ;oBACR,WAAW;iBACZ,CAAC;qBACD,SAAS,CACR,cAAI;oBACF,IAAI,CAAC,SAAS,CAAC;wBACb,CAAC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,SAAS,EAAE;4BAC7B,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;wBACnD,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC9C,CAAC,EACD,eAAK;oBACH,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC3C,CAAC,CACF,CAAC;YACN,CAAC;SACF,CAAC;aACD,IAAI,CAAC,UAAC,OAA8B;YACnC,KAAI,CAAC,qBAAqB,GAAG,OAAO,CAAC;QACvC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAI;YACzB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAgB,GAAhB,UAAiB,KAAa,EAAE,IAAS;QACvC,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;IAED,sBAAI,oCAAS;aAAb;YACE,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;QACpC,CAAC;;;OAAA;IAED,sBAAI,oCAAS;aAAb;YAAA,iBAMC;YALC,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;gBACjC,KAAK,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YAClD,CAAC,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;QACf,CAAC;;;OAAA;IAED,qCAAa,GAAb,UAAc,KAAK,EAAE,OAAO;QAC1B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;IAC3C,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,cAAI,IAAI,WAAI,GAAG,CAAC,EAAR,CAAQ,CAAC,EAAE;YAC5C,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;SAC/D;aAAM,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC;gBACpC,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,6CAA6C,CAAC,CAAC;YAC1E,CAAC,CAAC,CAAC;SACJ;aAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YAC5C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC9C,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,6CAA6C,CAAC,CAAC;YAC1E,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,EAAE,CAAC;YAC9B,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAkBC;QAjBC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI;YACF,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;gBACnB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC;oBAC9B,IAAI,EAAE,SAAS;oBACf,WAAW,EAAE,kBAAkB;oBAC/B,MAAM,EAAE,IAAI,CAAC,SAAS,GAAG,GAAG;oBAC5B,MAAM,EAAE;wBACN,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAC3B,CAAC;iBACF,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;aAC1B;SACF;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;SAC/B;IACH,CAAC;IAEM,qCAAa,GAApB;QACE,+DAA+D;QAC/D,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,CAAC;IACrC,CAAC;IAxHU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gGAAoC;;SAErC,CAAC;+EAQuB,yDAAW;YACX,gEAAc;YACL,uEAAoB;YAClC,sDAAM;OAVb,aAAa,CAyHzB;IAAD,oBAAC;CAAA;AAzHyB;;;;;;;;;;;;ACd1B,weAAwe,gBAAgB,iFAAiF,iBAAiB,4DAA4D,yuB;;;;;;;;;;;ACAtpB,+DAA+D,uJ;;;;;;;;;;;;;;;;;;;ACAb;AACJ;AACO;AAOrD;IAME,6BACU,WAAwB,EACxB,WAA2B;QAD3B,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAgB;QALrC,gBAAW,GAAG,EAAE,CAAC;QACjB,gBAAW,GAAG,KAAK,CAAC;IAKjB,CAAC;IAEJ,sCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAC/C,cAAI;YACF,IAAI,CAAC,SAAS,CAAC;gBACb,CAAC,CAAC,CAAC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBACxC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC9C,CAAC,EACD,eAAK;YACH,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,yCAAW,GAAX;QAAA,iBAoBC;QAnBC,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAExB,IAAI,CAAC,WAAW;iBACb,IAAI,CAAC,iBAAiB,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,CAAC;iBACnD,SAAS,CACR,cAAI;gBACF,IAAI,CAAC,SAAS,CAAC;oBACb,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;oBAC3C,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9C,CAAC,EACD,eAAK;gBACH,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAC3C,CAAC,EACD;gBACE,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC3B,CAAC,CACF,CAAC;SACL;IACH,CAAC;IA5CU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,kHAA0C;;SAE3C,CAAC;+EAQuB,yDAAW;YACX,gEAAc;OAR1B,mBAAmB,CA6C/B;IAAD,0BAAC;CAAA;AA7C+B;;;;;;;;;;;;ACThC,ihBAAihB,SAAS,GAAG,SAAS,MAAM,0BAA0B,wBAAwB,yBAAyB,qNAAqN,eAAe,8YAA8Y,eAAe,KAAK,yDAAyD,kGAAkG,uBAAuB,qDAAqD,4BAA4B,2Y;;;;;;;;;;;ACAhgD,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;ACAb;AACD;AACH;AACO;AAOrD;IAKE,2BACU,WAAwB,EACxB,KAAqB,EACrB,WAA2B;QAF3B,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAgB;QALrC,SAAI,GAAG,CAAC,CAAC;IAMN,CAAC;IAEJ,oCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,aAAG;YAC7B,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;YAC5B,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,oCAAK;aAAT;YACE,OAAO,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAClC,CAAC;;;OAAA;IAED,sBAAI,oCAAK;aAAT;YACE,OAAO,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;QAC/D,CAAC;;;OAAA;IAEK,uCAAW,GAAjB,UAAkB,KAAW;;;;gBAC3B,IAAI,KAAK,EAAE;oBACT,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;iBACtB;gBAED,IAAI,CAAC,WAAW;qBACb,GAAG,CAAC,qBAAmB,IAAI,CAAC,UAAU,eAAS,IAAI,CAAC,IAAI,GAAG,CAAC,CAAE,CAAC;qBAC/D,SAAS,CACR,cAAI;oBACF,IAAI,CAAC,SAAS,CAAC;wBACb,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;wBACxB,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC9C,CAAC,EACD,eAAK;oBACH,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC3C,CAAC,CACF,CAAC;;;;KACL;IA3CU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,4GAAwC;;SAEzC,CAAC;+EAOuB,yDAAW;YACjB,8DAAc;YACR,gEAAc;OAR1B,iBAAiB,CA4C7B;IAAD,wBAAC;CAAA;AA5C6B;;;;;;;;;;;;;;;;;;;;ACV4B;AACf;AACS;AAKpD;IAOE,qBAAoB,MAAc,EAAU,WAA2B;QAAvE,iBAMC;QANmB,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAgB;QANvE,YAAO,GAAG,EAAE,CAAC;QACb,gBAAW,GAAG,QAAQ,CAAC;QAGvB,cAAS,GAAG,CAAC,CAAC;QAGZ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,eAAK;YAChC,IAAI,KAAK,YAAY,+DAAe,EAAE;gBACpC,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2BAAK,GAAL,UAAM,OAAO;QACX,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC5B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED,6BAAO,GAAP,UAAQ,OAAO;QACb,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED,6BAAO,GAAP,UAAQ,OAAO;QACb,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAED,gCAAU,GAAV;QAAA,iBAUC;QATC,IAAI,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YACjC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,SAAS,CACrD,cAAI;gBACF,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;gBACzB,6BAA6B;YAC/B,CAAC,EACD,eAAK,IAAI,YAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAjB,CAAiB,CAC3B,CAAC;SACH;IACH,CAAC;IAED,6BAAO,GAAP;QACE,IAAM,IAAI,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC1C,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACtC,CAAC;IAED,+BAAS,GAAT,UAAU,IAAY;QACpB,IAAM,IAAI,GAAQ,IAAI,CAAC,OAAO,EAAE,CAAC;QACjC,IAAI,IAAI,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAA7C,CAA6C,CAAC,EAAE;YACpE,OAAO,KAAK,CAAC;SACd;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAChB,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;YACnD,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,+BAAS,GAAT;QACE,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACrC,CAAC;IAED,oCAAc,GAAd,UAAe,IAAY;QACzB,IAAI,IAAI,GAAQ,IAAI,CAAC,OAAO,EAAE,CAAC;QAE/B,IAAI,IAAI,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAA7C,CAA6C,CAAC,EAAE;YACpE,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAA7C,CAA6C,CAAC,CAAC;YAE1E,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;SACpD;IACH,CAAC;IAzEU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAQ4B,sDAAM,EAAuB,gEAAc;OAP5D,WAAW,CA0EvB;IAAD,kBAAC;CAAA;AA1EuB;;;;;;;;;;;;ACPxB,4uCAA4uC,eAAe,uEAAuE,iBAAiB,8HAA8H,iBAAiB,8CAA8C,4BAA4B,2G;;;;;;;;;;;ACA5iD,gCAAgC,sBAAsB,sBAAsB,sBAAsB,uBAAuB,EAAE,WAAW,uBAAuB,cAAc,wCAAwC,wCAAwC,EAAE,+CAA+C,2tB;;;;;;;;;;;;;;;;;;;ACA1P;AACJ;AACO;AAOrD;IAGE,uBACU,WAAwB,EACxB,WAA2B;QAD3B,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAgB;IAClC,CAAC;IAEJ,gCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,SAAS,CAC7C,cAAI;YACF,IAAI,CAAC,SAAS,CAAC;gBACb,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;gBACpC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;QAC1D,CAAC,EACD,eAAK;YACH,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3C,CAAC,CACF,CAAC;IACJ,CAAC;IAnBU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,gGAAoC;;SAErC,CAAC;+EAKuB,yDAAW;YACX,gEAAc;OAL1B,aAAa,CAoBzB;IAAD,oBAAC;CAAA;AApByB;;;;;;;;;;;;ACT1B,+zC;;;;;;;;;;;ACAA,+DAA+D,2I;;;;;;;;;;;;;;;;;;;;ACAb;AACG;AACP;AACL;AAOzC;IAME,wBACU,MAAc,EACd,WAA2B,EAC3B,WAAwB;QAFxB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAgB;QAC3B,gBAAW,GAAX,WAAW,CAAa;QARlC,UAAK,GAAG,EAAE,CAAC;QACX,aAAQ,GAAG,EAAE,CAAC;QAEd,gBAAW,GAAG,KAAK,CAAC;IAMjB,CAAC;IAEJ,iCAAQ,GAAR,cAAY,CAAC;IAEb,iCAAQ,GAAR;QACE,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO,IAAI,CAAC;aACb;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;aACnD;SACF;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;SACjD;IACH,CAAC;IAED,8BAAK,GAAL;QAAA,iBA2BC;QA1BC,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;YACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YAExB,IAAI,CAAC,WAAW;iBACb,IAAI,CAAC,qBAAqB,EAAE;gBAC3B,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACxB,CAAC;iBACD,SAAS,CACR,cAAI;gBACF,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;oBACnB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC7C,KAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;oBAC9B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;iBAC7B;qBAAM;oBACL,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;iBACzC;YACH,CAAC,EACD,eAAK;gBACH,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAC3C,CAAC,EACD;gBACE,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC3B,CAAC,CACF,CAAC;SACL;IACH,CAAC;IArDU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,mGAAqC;;SAEtC,CAAC;+EAQkB,sDAAM;YACD,gEAAc;YACd,yDAAW;OATvB,cAAc,CAsD1B;IAAD,qBAAC;CAAA;AAtD0B;;;;;;;;;;;;ACV3B,qIAAqI,uBAAuB,yB;;;;;;;;;;;ACA5J,+DAA+D,+I;;;;;;;;;;;;;;;;;;ACAb;AACJ;AAO9C;IACE,0BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,mCAAQ,GAAR,cAAY,CAAC;IAHF,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAExC,CAAC;+EAEiC,yDAAW;OADjC,gBAAgB,CAI5B;IAAD,uBAAC;CAAA;AAJ4B;;;;;;;;;;;;ACR7B,o9BAAo9B,cAAc,qDAAqD,iBAAiB,iQAAiQ,cAAc,KAAK,qDAAqD,yFAAyF,yBAAyB,yLAAyL,4BAA4B,gJ;;;;;;;;;;;ACAxrD,+DAA+D,2J;;;;;;;;;;;;;;;;;;;ACAb;AACJ;AACO;AAOrD;IAGE,6BACU,WAAwB,EACxB,WAA2B;QAD3B,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAgB;IAClC,CAAC;IAEJ,sCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,SAAS,CACpD,cAAI;YACF,IAAI,CAAC,SAAS,CAAC;gBACb,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;gBACpC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC9C,CAAC,EACD,eAAK;YACH,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3C,CAAC,CACF,CAAC;IACJ,CAAC;IAnBU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,qHAA2C;;SAE5C,CAAC;+EAKuB,yDAAW;YACX,gEAAc;OAL1B,mBAAmB,CAoB/B;IAAD,0BAAC;CAAA;AApB+B;;;;;;;;;;;;ACThC,w6CAAw6C,iBAAiB,47B;;;;;;;;;;;ACAz7C,+DAA+D,2J;;;;;;;;;;;;;;;;;;;;ACAb;AACJ;AACO;AACZ;AAOzC;IAYE,8BACU,WAAwB,EACxB,WAA2B,EAC3B,MAAc;QAFd,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAgB;QAC3B,WAAM,GAAN,MAAM,CAAQ;QAdxB,YAAO,GAAG;YACR,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,CAAC;YACR,UAAU,EAAE,EAAE;YACd,WAAW,EAAE,EAAE;YACf,eAAe,EAAE,IAAI;SACtB,CAAC;QAGF,gBAAW,GAAG,KAAK,CAAC;IAMjB,CAAC;IAEJ,uCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAC/C,cAAI;YACF,IAAI,CAAC,SAAS,CAAC;gBACb,CAAC,CAAC,CAAC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;gBACxC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC9C,CAAC,EACD,eAAK;YACH,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,uCAAQ,GAAR,UAAS,OAAO;QACd,IAAI,OAAO,CAAC,KAAK,EAAE;YACjB,IAAI,OAAO,CAAC,KAAK,EAAE;gBACjB,IAAI,OAAO,CAAC,UAAU,EAAE;oBACtB,IAAI,OAAO,CAAC,WAAW,EAAE;wBACvB,IAAI,OAAO,CAAC,eAAe,EAAE;4BAC3B,OAAO,IAAI,CAAC;yBACb;6BAAM;4BACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC;yBACxD;qBACF;yBAAM;wBACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;qBACrD;iBACF;qBAAM;oBACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;iBACnD;aACF;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;aACjD;SACF;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;SACjD;IACH,CAAC;IAED,yCAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,OAAO,CAAC,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC;IAEK,mCAAI,GAAV;;;;;gBACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAExB,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE;oBACzB,IAAI,GAAG,IAAI,QAAQ,EAAE,CAAC;oBAE5B,KAAW,GAAG,IAAI,IAAI,CAAC,OAAO,EAAE;wBAC9B,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;4BACpC,IAAI,GAAG,KAAK,iBAAiB,EAAE;gCAC7B,IAAI,CAAC,MAAM,CACT,iBAAiB,EACjB,IAAI,CAAC,OAAO,CAAC,eAAe,EAC5B,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,CAClC,CAAC;6BACH;iCAAM;gCACL,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;6BACrC;yBACF;qBACF;oBAED,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC,SAAS,CAC3D,cAAI;wBACF,IAAI,CAAC,SAAS,CAAC;4BACb,CAAC,CAAC,KAAI,CAAC,MAAM;iCACR,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC;iCACjC,IAAI,CAAC,cAAM,YAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAzC,CAAyC,CAAC;iCACrD,KAAK,CAAC,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,EAA7B,CAA6B,CAAC;4BAClD,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBAC9C,CAAC,EACD,eAAK;wBACH,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;oBAC3C,CAAC,EACD;wBACE,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;oBAC3B,CAAC,CACF,CAAC;iBACH;;;;KACF;IAhGU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,qHAA2C;;SAE5C,CAAC;+EAcuB,yDAAW;YACX,gEAAc;YACnB,sDAAM;OAfb,oBAAoB,CAiGhC;IAAD,2BAAC;CAAA;AAjGgC;;;;;;;;;;;;ACVjC,gpBAAgpB,iBAAiB,oEAAoE,sBAAsB,6GAA6G,yBAAyB,8XAA8X,uBAAuB,wLAAwL,4BAA4B,muBAAmuB,qBAAqB,2UAA2U,gBAAgB,0CAA0C,sBAAsB,60DAA60D,4DAA4D,4HAA4H,cAAc,8B;;;;;;;;;;;ACAhpJ,+DAA+D,+I;;;;;;;;;;;;;;;;;;;;ACAb;AACO;AACX;AACO;AAOrD;IAUE,0BACU,KAAqB,EACrB,WAAwB,EACxB,WAA2B,EAC3B,MAAc;QAHd,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAgB;QAC3B,WAAM,GAAN,MAAM,CAAQ;QAbxB,aAAQ,GAAG;YACT,KAAK,EAAE,EAAE;YACT,WAAW,EAAE,EAAE;YACf,MAAM,EAAE,CAAC;SACV,CAAC;QACF,gBAAW,GAAG,KAAK,CAAC;IASjB,CAAC;IAEJ,mCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,aAAG;YAC7B,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,kBAAgB,GAAG,CAAC,IAAI,CAAG,CAAC,CAAC,SAAS,CACzD,cAAI;gBACF,IAAI,CAAC,SAAS,CAAC;oBACb,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;oBAClC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAClC,CAAC,EACD,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAxC,CAAwC,CAClD,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAU,GAAV;QAAA,iBAuBC;QAtBC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAExB,IAAI,CAAC,WAAW;aACb,IAAI,CAAC,aAAa,EAAE;YACnB,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG;YAC3B,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;YAC1B,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW;YACtC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;SAC7B,CAAC;aACD,SAAS,CACR,cAAI;YACF,IAAI,CAAC,SAAS,CAAC;gBACb,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;gBAC3C,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC9C,CAAC,EACD,eAAK;YACH,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3C,CAAC,EACD;YACE,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QAC3B,CAAC,CACF,CAAC;IACN,CAAC;IAED,oCAAS,GAAT;QACE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC;YACtC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,oCAAoC,CAAC;YAChE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,wCAAwC,CAAC,CAAC;IACvE,CAAC;IA3DU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAExC,CAAC;+EAYiB,8DAAc;YACR,yDAAW;YACX,gEAAc;YACnB,sDAAM;OAdb,gBAAgB,CA4D5B;IAAD,uBAAC;CAAA;AA5D4B;;;;;;;;;;;;ACV7B,4nBAA4nB,yBAAyB,4nC;;;;;;;;;;;ACArpB,yBAAyB,oBAAoB,EAAE,+CAA+C,2X;;;;;;;;;;;;;;;;;;ACA5C;AACJ;AAO9C;IACE,0BAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAG,CAAC;IAEhD,mCAAQ,GAAR,cAAY,CAAC;IAHF,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,yGAAuC;;SAExC,CAAC;+EAEiC,yDAAW;OADjC,gBAAgB,CAI5B;IAAD,uBAAC;CAAA;AAJ4B;;;;;;;;;;;;ACR7B,27E;;;;;;;;;;;ACAA,+DAA+D,+J;;;;;;;;;;;;;;;;;;;;ACAtB;AACS;AACJ;AACO;AAOrD;IASE,+BACU,MAAc,EACd,WAAwB,EACxB,WAA2B;QAF3B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAgB;QAXrC,SAAI,GAAG,EAAE,CAAC;QACV,UAAK,GAAG,EAAE,CAAC;QACX,aAAQ,GAAG,EAAE,CAAC;QACd,cAAS,GAAG,EAAE,CAAC;QACf,aAAQ,GAAG,KAAK,CAAC;QAEjB,gBAAW,GAAG,KAAK,CAAC;IAMjB,CAAC;IAEJ,wCAAQ,GAAR,cAAY,CAAC;IAEb,wCAAQ,GAAR;QACE,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,IAAI,CAAC,KAAK,EAAE;gBACd,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjB,IAAI,IAAI,CAAC,SAAS,EAAE;wBAClB,IAAI,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,SAAS,EAAE;4BACpC,OAAO,IAAI,CAAC;yBACb;6BAAM;4BACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;yBACnD;qBACF;yBAAM;wBACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC;qBAChE;iBACF;qBAAM;oBACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;iBACnD;aACF;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC;aACjD;SACF;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;SAChD;IACH,CAAC;IAED,wCAAQ,GAAR;QAAA,iBAoCC;QAnCC,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE;YACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,WAAW;iBACb,IAAI,CAAC,sBAAsB,EAAE;gBAC5B,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,KAAK,EAAE,IAAI,CAAC,KAAK;gBACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;aACxB,CAAC;iBACD,SAAS,CACR,cAAI;gBACF,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE;oBACnB,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC7C,wDAAwD;oBAExD,KAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;oBAE9B,KAAI,CAAC,MAAM;yBACR,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;yBAC7B,IAAI,CAAC;wBACJ,KAAI,CAAC,WAAW,CAAC,OAAO,CACtB,mEAAmE,CACpE,CAAC;oBACJ,CAAC,CAAC;yBACD,KAAK,CAAC,aAAG,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,EAA3B,CAA2B,CAAC,CAAC;iBAC9C;qBAAM;oBACL,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;iBACzC;YACH,CAAC,EACD,eAAK,IAAI,YAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,EAAxC,CAAwC,EACjD;gBACE,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC3B,CAAC,CACF,CAAC;SACL;IACH,CAAC;IA7EU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,wHAA4C;;SAE7C,CAAC;+EAWkB,sDAAM;YACD,yDAAW;YACX,gEAAc;OAZ1B,qBAAqB,CA8EjC;IAAD,4BAAC;CAAA;AA9EiC;;;;;;;;;;;;;;;;;;;ACV6B;AAEpB;AAK3C;IACE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAExC,4BAAG,GAAH,UAAI,IAAY;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,6BAAI,GAAJ,UAAK,IAAY,EAAE,IAAS;QAC1B,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACpC,CAAC;IATU,cAAc;QAH1B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAE0B,+DAAU;OADzB,cAAc,CAU1B;IAAD,qBAAC;CAAA;AAV0B;;;;;;;;;;;;ACP3B,mdAAmd,SAAS,GAAG,SAAS,MAAM,kBAAkB,uDAAuD,SAAS,yNAAyN,oBAAoB,8YAA8Y,oBAAoB,KAAK,yDAAyD,gFAAgF,sBAAsB,qDAAqD,4BAA4B,2sBAA2sB,4DAA4D,4HAA4H,cAAc,8B;;;;;;;;;;;ACAr1E,+DAA+D,+I;;;;;;;;;;;;;;;;;;;;ACAb;AACD;AACH;AACO;AAOrD;IAME,yBACU,KAAqB,EACrB,WAAwB,EACxB,WAA2B;QAF3B,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAgB;QAPrC,SAAI,GAAG,CAAC,CAAC;IAQN,CAAC;IAEJ,kCAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,aAAG;YAC7B,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC;YAC1B,KAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACd,KAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sBAAI,kCAAK;aAAT;YACE,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;QAC1D,CAAC;;;OAAA;IAED,sBAAI,kCAAK;aAAT;YACE,OAAO,IAAI,CAAC,GAAG,CACb,IAAI,CAAC,OAAO,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC,EAClD,IAAI,CAAC,OAAO,CAAC,MAAM,CACpB,CAAC;QACJ,CAAC;;;OAAA;IAED,qCAAW,GAAX;QAAA,iBAeC;QAdC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,WAAW;aACb,GAAG,CAAC,uBAAqB,IAAI,CAAC,KAAK,eAAS,IAAI,CAAC,IAAI,GAAG,CAAC,CAAE,CAAC;aAC5D,SAAS,CACR,cAAI;YACF,IAAI,CAAC,SAAS,CAAC;gBACb,CAAC,CAAC,CAAC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;gBAClC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC9C,CAAC,EACD,eAAK;YACH,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3C,CAAC,CACF,CAAC;IACN,CAAC;IA9CU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,sGAAsC;;SAEvC,CAAC;+EAQiB,8DAAc;YACR,yDAAW;YACX,gEAAc;OAT1B,eAAe,CA+C3B;IAAD,sBAAC;CAAA;AA/C2B;;;;;;;;;;;;ACV5B,4zE;;;;;;;;;;;ACAA,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;ACAb;AACJ;AACO;AAOrD;IAIE,2BACU,WAAwB,EACxB,WAA2B;QAD3B,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAgB;QALrC,gBAAW,GAAG,KAAK,CAAC;IAMjB,CAAC;IAEE,oCAAQ,GAAd;;;;gBACE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE;oBAC1B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC,cAAI;wBAC1D,KAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAClC;4BACE,MAAM,EAAE,EAAE;4BACV,UAAU,EAAE,EAAE;yBACf,EACD,IAAI,CAAC,MAAM,CAAC,CACb,CAAC;oBACJ,CAAC,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC,MAAM,CAClC;wBACE,MAAM,EAAE,EAAE;wBACV,UAAU,EAAE,EAAE;qBACf,EACD,IAAI,CAAC,WAAW,CAAC,IAAI,CACtB,CAAC;iBACH;;;;KACF;IAED,oCAAQ,GAAR,UAAS,QAAQ;QACf,IAAI,QAAQ,CAAC,MAAM,CAAC,EAAE;YACpB,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE;gBACrB,IAAI,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBACtB,IAAI,QAAQ,CAAC,YAAY,CAAC,EAAE;wBAC1B,IAAI,QAAQ,CAAC,QAAQ,CAAC,KAAK,QAAQ,CAAC,YAAY,CAAC,EAAE;4BACjD,OAAO,IAAI,CAAC;yBACb;6BAAM;4BACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;yBACnD;qBACF;yBAAM;wBACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;qBAC/D;iBACF;qBAAM;oBACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;iBACtD;aACF;iBAAM;gBACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;aACpD;SACF;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;SACnD;IACH,CAAC;IAED,kCAAM,GAAN;QAAA,iBAyBC;QAxBC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE;YACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,WAAW;iBACb,IAAI,CAAC,uBAAuB,EAAE;gBAC7B,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;gBAClC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;gBACpC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;gBACxC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC;aAC3C,CAAC;iBACD,SAAS,CACR,cAAI;gBACF,IAAI,CAAC,SAAS,CAAC;oBACb,CAAC,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,UAAU,EAAE;wBAC9B,KAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBAC5C,CAAC,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9C,CAAC,EACD,eAAK;gBACH,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC;YAC3C,CAAC,EACD;gBACE,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC3B,CAAC,CACF,CAAC;SACL;IACH,CAAC;IAhFU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;YACxB,4GAAwC;;SAEzC,CAAC;+EAMuB,yDAAW;YACX,gEAAc;OAN1B,iBAAiB,CAiF7B;IAAD,wBAAC;CAAA;AAjF6B;;;;;;;;;;;;;;;;;;ACTa;AAU3C;IACE;IAAe,CAAC;IAEhB,oCAAS,GAAT,UACE,OAAyB,EACzB,IAAiB;QAEjB,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAE5C,IAAI,KAAK,EAAE;YACT,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACtB,UAAU,EAAE;oBACV,aAAa,EAAE,KAAK;iBACrB;aACF,CAAC,CAAC;SACJ;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAlBU,gBAAgB;QAD5B,gEAAU,EAAE;;OACA,gBAAgB,CAmB5B;IAAD,uBAAC;CAAA;AAnB4B;;;;;;;;;;;;;ACV7B;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<section id=\\\"address\\\">\\n  <div class=\\\"container p-5\\\">\\n    <h4 class=\\\"display-4\\\">My Shipping Address</h4>\\n    <hr />\\n    <app-message></app-message>\\n    <div *ngIf=\\\"!currentAddress\\\" class=\\\"m-auto\\\">\\n      <h1 class=\\\"text-center display-3 mt-5\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n      </h1>\\n    </div>\\n    <div *ngIf=\\\"currentAddress\\\" class=\\\"card bg-light\\\">\\n      <div class=\\\"card-body\\\">\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <label>Address 1</label>\\n            <input\\n              type=\\\"text\\\"\\n              name=\\\"address1\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"currentAddress.addr1\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Address 2</label>\\n            <input\\n              type=\\\"text\\\"\\n              name=\\\"address2\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"currentAddress.addr2\\\"\\n            />\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>City</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  name=\\\"city\\\"\\n                  class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"currentAddress.city\\\"\\n                />\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>State</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  name=\\\"state\\\"\\n                  class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"currentAddress.state\\\"\\n                />\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <div class=\\\"form-group\\\">\\n                <label>Postal Code</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  name=\\\"city\\\"\\n                  class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"currentAddress.postalCode\\\"\\n                />\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Country</label>\\n            <input\\n              type=\\\"text\\\"\\n              name=\\\"country\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"currentAddress.country\\\"\\n            />\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-danger\\\"\\n            (click)=\\\"updateAddress()\\\"\\n            [disabled]=\\\"btnDisabled\\\"\\n          >\\n            Change Address\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZHJlc3MvYWRkcmVzcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { DataService } from \"../data.service\";\nimport { RestApiService } from \"../rest-api.service\";\n\n@Component({\n  selector: \"app-address\",\n  templateUrl: \"./address.component.html\",\n  styleUrls: [\"./address.component.scss\"]\n})\nexport class AddressComponent implements OnInit {\n  btnDisabled = false;\n\n  currentAddress: any;\n\n  constructor(\n    private dataService: DataService,\n    private restService: RestApiService\n  ) {}\n\n  ngOnInit() {\n    this.restService.get(\"/api/accounts/address\").subscribe(\n      data => {\n        if (\n          JSON.stringify(data[\"address\"]) === \"{}\" &&\n          this.dataService.message === \"\"\n        ) {\n          this.dataService.warning(\n            \"You have not entered your shipping address. Please enter your shipping address.\"\n          );\n        }\n        this.currentAddress = data[\"address\"];\n      },\n      error => {\n        this.dataService.error(error[\"message\"]);\n      }\n    );\n  }\n\n  updateAddress() {\n    this.btnDisabled = true;\n    this.restService\n      .post(\"/api/accounts/address\", this.currentAddress)\n      .subscribe(\n        res => {\n          res[\"success\"]\n            ? (this.dataService.success(res[\"message\"]),\n              this.dataService.getProfile())\n            : this.dataService.error(res[\"message\"]);\n        },\n        error => {\n          this.dataService.error(error[\"message\"]);\n        },\n        () => {\n          this.btnDisabled = false;\n        }\n      );\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { HomeComponent } from \"./home/home.component\";\nimport { RegistrationComponent } from \"./registration/registration.component\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { AuthGuard } from \"./auth.guard\";\nimport { ProfileComponent } from \"./profile/profile.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { AddressComponent } from \"./address/address.component\";\nimport { CategoriesComponent } from \"./categories/categories.component\";\nimport { PortproductComponent } from \"./portproduct/portproduct.component\";\nimport { MyProductsComponent } from \"./my-products/my-products.component\";\nimport { CategoryComponent } from \"./category/category.component\";\nimport { ProductComponent } from \"./product/product.component\";\nimport { SearchComponent } from \"./search/search.component\";\nimport { CartComponent } from \"./cart/cart.component\";\n\nconst routes: Routes = [\n  { path: \"\", component: HomeComponent },\n  {\n    path: \"categories\",\n    children: [\n      { path: \"\", component: CategoriesComponent },\n      { path: \":id\", component: CategoryComponent }\n    ]\n  },\n  {\n    path: \"register\",\n    component: RegistrationComponent,\n    canActivate: [AuthGuard]\n  },\n  { path: \"cart\", component: CartComponent },\n  { path: \"search\", component: SearchComponent },\n  { path: \"product/:id\", component: ProductComponent },\n  { path: \"login\", component: LoginComponent, canActivate: [AuthGuard] },\n  {\n    path: \"profile\",\n    canActivate: [AuthGuard],\n    children: [\n      { path: \"\", component: ProfileComponent },\n      { path: \"settings\", component: SettingsComponent },\n      { path: \"address\", component: AddressComponent },\n      { path: \"postproduct\", component: PortproductComponent },\n      { path: \"myproducts\", component: MyProductsComponent }\n    ]\n  },\n  { path: \"**\", redirectTo: \"\" }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-dark bg-main\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <a routerLink=\\\"/\\\" class=\\\"navbar-brand\\\">\\n      <img src=\\\"./assets/img/logo.png\\\" alt=\\\"logo\\\" id=\\\"logo\\\" /> Amazono\\n    </a>\\n    <button class=\\\"navbar-toggler\\\" (click)=\\\"isCollapsed = !isCollapsed\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div\\n      [ngbCollapse]=\\\"isCollapsed\\\"\\n      style=\\\"align-items: left; margin-left: 50px;\\\"\\n      class=\\\"collapse navbar-collapse flex-column\\\"\\n      id=\\\"navbarNav\\\"\\n    >\\n      <div class=\\\"input-group w-75\\\">\\n        <input\\n          type=\\\"text\\\"\\n          name=\\\"search\\\"\\n          class=\\\"form-control\\\"\\n          [(ngModel)]=\\\"searchTerm\\\"\\n          (keyup.enter)=\\\"search()\\\"\\n        />\\n        <span id=\\\"searchBtn\\\" class=\\\"bg-warning\\\" (click)=\\\"search()\\\">\\n          <i class=\\\"fa fa-search\\\"></i>\\n        </span>\\n      </div>\\n      <div class=\\\"w-100\\\">\\n        <ul class=\\\"navbar-nav\\\">\\n          <li class=\\\"nav-item\\\">\\n            <a\\n              (click)=\\\"collapse()\\\"\\n              routerLink=\\\"/categories\\\"\\n              routerLinkActive=\\\"active\\\"\\n              class=\\\"nav-link\\\"\\n              >Categories</a\\n            >\\n          </li>\\n          <li\\n            class=\\\"nav-item ml-0 ml-md-auto\\\"\\n            ngbDropdown\\n            #dropdown=\\\"ngbDropdown\\\"\\n          >\\n            <a class=\\\"nav-link dropdown-toggle\\\" ngbDropdownToggle>\\n              <i class=\\\"fa fa-user mr-1\\\"></i>\\n              <span *ngIf=\\\"!token\\\">Accounts</span>\\n              <span *ngIf=\\\"dataService.user\\\">{{ dataService.user.name }}</span>\\n            </a>\\n            <div ngbDropdownMenu class=\\\"dropdown-menu\\\">\\n              <a\\n                *ngIf=\\\"token\\\"\\n                (click)=\\\"closeDropdown(dropdown); collapse()\\\"\\n                routerLink=\\\"/profile\\\"\\n                class=\\\"dropdown-item\\\"\\n              >\\n                <i class=\\\"fa fa-user-circle\\\" aria-hidden=\\\"true\\\"></i> Profile\\n              </a>\\n              <a\\n                *ngIf=\\\"!token\\\"\\n                (click)=\\\"closeDropdown(dropdown); collapse()\\\"\\n                routerLink=\\\"/login\\\"\\n                class=\\\"dropdown-item\\\"\\n              >\\n                <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i> Login\\n              </a>\\n              <a\\n                *ngIf=\\\"token\\\"\\n                (click)=\\\"closeDropdown(dropdown); collapse(); logout()\\\"\\n                class=\\\"dropdown-item\\\"\\n              >\\n                <i class=\\\"fa fa-key\\\" aria-hidden=\\\"true\\\"></i> Logout\\n              </a>\\n              <a\\n                *ngIf=\\\"!token\\\"\\n                (click)=\\\"closeDropdown(dropdown); collapse()\\\"\\n                routerLink=\\\"/register\\\"\\n                class=\\\"dropdown-item\\\"\\n              >\\n                <i class=\\\"fa fa-group\\\" aria-hidden=\\\"true\\\"></i> Register\\n              </a>\\n            </div>\\n          </li>\\n          <li class=\\\"nav-item ml-0 ml-md-2\\\">\\n            <a\\n              (click)=\\\"collapse()\\\"\\n              routerLink=\\\"/cart\\\"\\n              routerLinkActive=\\\"active\\\"\\n              class=\\\"nav-link\\\"\\n            >\\n              <i class=\\\"fa fa-shopping-cart mr-1\\\"></i>\\n              Cart\\n              <span\\n                class=\\\"badge badge-warning ml-1\\\"\\n                *ngIf=\\\"dataService.cartItems\\\"\\n                >{{ dataService.cartItems }}</span\\n              >\\n            </a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n</nav>\\n\\n<router-outlet></router-outlet>\\n\\n<footer id=\\\"main-footer\\\" class=\\\"bg-main text-white mt-5 p-5\\\">\\n  <div class=\\\"container\\\">\\n    <p class=\\\"lead text-center\\\">\\n      Copyright &copy; {{ time.getFullYear() }} Amazono\\n    </p>\\n  </div>\\n</footer>\\n\"","module.exports = \"#searchBtn {\\n  cursor: pointer;\\n  border: none;\\n  padding: 0.375rem 0.75rem;\\n  margin-bottom: 0;\\n  font-size: 1rem;\\n  font-weight: 400;\\n  line-height: 1.5;\\n  border-top-right-radius: 0.25rem;\\n  border-bottom-right-radius: 0.25rem; }\\n\\n#logo {\\n  width: 50px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZDpcXE5vZGVqc1xcQW5ndWxhclxcYW1hem9uXFxmcm9udGVuZC9zcmNcXGFwcFxcYXBwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtFQUNmLFlBQVk7RUFDWix5QkFBeUI7RUFDekIsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLGdDQUFnQztFQUNoQyxtQ0FBbUMsRUFBQTs7QUFHckM7RUFDRSxXQUFXLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIjc2VhcmNoQnRuIHtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgYm9yZGVyOiBub25lO1xyXG4gIHBhZGRpbmc6IDAuMzc1cmVtIDAuNzVyZW07XHJcbiAgbWFyZ2luLWJvdHRvbTogMDtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBsaW5lLWhlaWdodDogMS41O1xyXG4gIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwLjI1cmVtO1xyXG4gIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwLjI1cmVtO1xyXG59XHJcblxyXG4jbG9nbyB7XHJcbiAgd2lkdGg6IDUwcHg7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { DataService } from \"./data.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"]\n})\nexport class AppComponent implements OnInit {\n  searchTerm = \"\";\n  isCollapsed: boolean = true;\n  time: Date = new Date();\n\n  constructor(private router: Router, private dataService: DataService) {\n    // console.log(this.dataService.user);\n  }\n\n  ngOnInit() {\n    this.dataService.getProfile();\n    this.dataService.cartItems = this.dataService.getCart().length;\n  }\n\n  get token() {\n    return localStorage.getItem(\"token\");\n  }\n\n  collapse() {\n    this.isCollapsed = true;\n  }\n\n  closeDropdown(dropdown) {\n    dropdown.close();\n  }\n\n  logout() {\n    this.dataService.user = {};\n    localStorage.clear();\n    this.router.navigate([\"\"]);\n  }\n\n  search() {\n    if (this.searchTerm) {\n      this.collapse();\n      this.router.navigate([\"search\", { query: this.searchTerm }]);\n    }\n  }\n}\n","import { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { HomeComponent } from \"./home/home.component\";\nimport { MessageComponent } from \"./message/message.component\";\nimport { RegistrationComponent } from \"./registration/registration.component\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { TokenInterceptor } from \"./token.interceptor\";\nimport { AuthGuard } from \"./auth.guard\";\nimport { ProfileComponent } from \"./profile/profile.component\";\nimport { SettingsComponent } from \"./settings/settings.component\";\nimport { AddressComponent } from \"./address/address.component\";\nimport { CategoriesComponent } from \"./categories/categories.component\";\nimport { PortproductComponent } from \"./portproduct/portproduct.component\";\nimport { MyProductsComponent } from \"./my-products/my-products.component\";\nimport { CategoryComponent } from \"./category/category.component\";\nimport { ProductComponent } from \"./product/product.component\";\nimport { SearchComponent } from \"./search/search.component\";\nimport { StripeCheckoutModule } from \"ng-stripe-checkout\";\nimport { CartComponent } from './cart/cart.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    MessageComponent,\n    RegistrationComponent,\n    LoginComponent,\n    ProfileComponent,\n    SettingsComponent,\n    AddressComponent,\n    CategoriesComponent,\n    PortproductComponent,\n    MyProductsComponent,\n    CategoryComponent,\n    ProductComponent,\n    SearchComponent,\n    CartComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    NgbModule.forRoot(),\n    StripeCheckoutModule\n  ],\n  providers: [\n    AuthGuard,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable } from \"@angular/core\";\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router\n} from \"@angular/router\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (localStorage.getItem(\"token\")) {\n      return state.url.startsWith(\"/profile\")\n        ? true\n        : (this.router.navigate([\"/\"]), false);\n    } else {\n      return state.url.startsWith(\"/profile\")\n        ? (this.router.navigate([\"/\"]), false)\n        : true;\n    }\n  }\n}\n","module.exports = \"<section id=\\\"cart\\\">\\n  <div class=\\\"container-fluid p-5\\\">\\n    <app-message></app-message>\\n    <h3 *ngIf=\\\"!cartItems.length\\\" class=\\\"display-2 text-center mt-5\\\">\\n      Cart is Empty\\n    </h3>\\n    <div *ngIf=\\\"cartItems.length\\\" class=\\\"row\\\">\\n      <div class=\\\"col-md-9\\\">\\n        <p class=\\\"lead font-weight-bold\\\">Shopping Cart</p>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"offset-8 col-2 d-none d-md-block\\\">\\n            <p>\\n              <small class=\\\"text-muted\\\">Price</small>\\n            </p>\\n          </div>\\n          <div class=\\\"col-2 d-none d-md-block\\\">\\n            <p>\\n              <small class=\\\"text-muted\\\">Quantity</small>\\n            </p>\\n          </div>\\n        </div>\\n        <hr class=\\\"mt-0\\\" />\\n        <div\\n          *ngFor=\\\"\\n            let item of cartItems;\\n            let i = index;\\n            trackBy: trackByCartItems\\n          \\\"\\n          class=\\\"cartItem\\\"\\n        >\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-4 col-md-2\\\">\\n              <a routerLink=\\\"/product/{{ item._id }}\\\">\\n                <img\\n                  src=\\\"{{ item.image }}\\\"\\n                  alt=\\\"productImage\\\"\\n                  class=\\\"img-fluid img-thumbnail\\\"\\n                />\\n              </a>\\n            </div>\\n            <div class=\\\"col-5 col-md-6\\\">\\n              <h5>\\n                <a routerLink=\\\"/product/{{ item._id }}\\\">{{ item.title }}</a>\\n              </h5>\\n              <p class=\\\"m-0\\\">\\n                <small class=\\\"text-muted\\\">{{ item.owner.name }}</small>\\n              </p>\\n              <p class=\\\"m-0\\\">\\n                <small class=\\\"text-muted\\\">{{ item.category.name }}</small>\\n              </p>\\n              <a class=\\\"text-danger\\\" (click)=\\\"removeProduct(i, item)\\\">Delete</a>\\n            </div>\\n            <div class=\\\"col-1 col-md-2\\\">\\n              <h6 class=\\\"font-weight-bold text-danger\\\">\\n                {{ item.price | currency }}\\n              </h6>\\n            </div>\\n            <div class=\\\"col-1 mt-5 mt-md-0 p-0\\\">\\n              <input\\n                type=\\\"number\\\"\\n                class=\\\"form-control\\\"\\n                min=\\\"1\\\"\\n                max=\\\"99\\\"\\n                [(ngModel)]=\\\"quantities[i]\\\"\\n              />\\n            </div>\\n          </div>\\n          <hr />\\n        </div>\\n        <h5 class=\\\"text-right\\\">\\n          Total:\\n          <span class=\\\"ml-1 font-weight-bold text-danger\\\">{{\\n            cartTotal | currency\\n          }}</span>\\n        </h5>\\n      </div>\\n      <div class=\\\"col-md-3\\\">\\n        <div class=\\\"card bg-light\\\">\\n          <div class=\\\"card-body\\\">\\n            <h5>\\n              Total:\\n              <span class=\\\"ml-1 font-weight-bold text-danger\\\">{{\\n                cartTotal | currency\\n              }}</span>\\n            </h5>\\n            <br />\\n            <button\\n              class=\\\"btn btn-warning btn-block\\\"\\n              (click)=\\\"checkout()\\\"\\n              [disabled]=\\\"btnDisabled\\\"\\n            >\\n              Checkout\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"input::-webkit-outer-spin-button,\\ninput::-webkit-inner-spin-button {\\n  -webkit-appearance: none;\\n  margin: 0; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FydC9kOlxcTm9kZWpzXFxBbmd1bGFyXFxhbWF6b25cXGZyb250ZW5kL3NyY1xcYXBwXFxjYXJ0XFxjYXJ0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFLHdCQUF3QjtFQUN4QixTQUFTLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jYXJ0L2NhcnQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dDo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbixcclxuaW5wdXQ6Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuIl19 */\"","import { Component, OnInit, AfterViewInit } from \"@angular/core\";\nimport { DataService } from \"../data.service\";\nimport { RestApiService } from \"../rest-api.service\";\nimport { Router } from \"@angular/router\";\nimport {\n  StripeCheckoutLoader,\n  StripeCheckoutHandler\n} from \"ng-stripe-checkout\";\n\n@Component({\n  selector: \"app-cart\",\n  templateUrl: \"./cart.component.html\",\n  styleUrls: [\"./cart.component.scss\"]\n})\nexport class CartComponent implements OnInit, AfterViewInit {\n  btnDisabled = false;\n  private stripeCheckoutHandler: StripeCheckoutHandler;\n\n  quantities = [];\n\n  constructor(\n    private dataService: DataService,\n    private restService: RestApiService,\n    private stripeCheckoutLoader: StripeCheckoutLoader,\n    private router: Router\n  ) {}\n\n  public ngAfterViewInit() {\n    this.stripeCheckoutLoader\n      .createHandler({\n        key: \"pk_test_fm3f1nL7BFBmXMuLC5OawOPz\",\n        image: \"assets/img/logo.png\",\n        locale: \"auto\",\n        token: stripeToken => {\n          let products;\n          products = [];\n          this.cartItems.forEach((d, index) => {\n            products.push({\n              product: d[\"_id\"],\n              quantity: this.quantities[index]\n            });\n          });\n\n          this.restService\n            .post(\"/api/payment\", {\n              totalPrice: this.cartTotal,\n              products,\n              stripeToken\n            })\n            .subscribe(\n              data => {\n                data[\"success\"]\n                  ? (this.dataService.clearCart(),\n                    this.dataService.success(\"Purchase Successful.\"))\n                  : this.dataService.error(data[\"message\"]);\n              },\n              error => {\n                this.dataService.error(error[\"message\"]);\n              }\n            );\n        }\n      })\n      .then((handler: StripeCheckoutHandler) => {\n        this.stripeCheckoutHandler = handler;\n      });\n  }\n\n  ngOnInit() {\n    this.cartItems.forEach(data => {\n      this.quantities.push(1);\n    });\n  }\n\n  trackByCartItems(index: number, item: any) {\n    return item._id;\n  }\n\n  get cartItems() {\n    return this.dataService.getCart();\n  }\n\n  get cartTotal() {\n    let total = 0;\n    this.cartItems.forEach((data, index) => {\n      total += data[\"price\"] * this.quantities[index];\n    });\n    return total;\n  }\n\n  removeProduct(index, product) {\n    this.quantities.splice(index, 1);\n    this.dataService.removeFromCart(product);\n  }\n\n  validate() {\n    if (!this.quantities.every(data => data > 0)) {\n      this.dataService.warning(\"Quantity cannot be less than one.\");\n    } else if (!localStorage.getItem(\"token\")) {\n      this.router.navigate([\"/login\"]).then(() => {\n        this.dataService.warning(\"You need to login before making a purchase.\");\n      });\n    } else if (!this.dataService.user[\"address\"]) {\n      this.router.navigate([\"/profile/address\"]).then(() => {\n        this.dataService.warning(\"You need to login before making a purchase.\");\n      });\n    } else {\n      this.dataService.message = \"\";\n      return true;\n    }\n  }\n\n  checkout() {\n    this.btnDisabled = true;\n    try {\n      if (this.validate()) {\n        this.stripeCheckoutHandler.open({\n          name: \"Amazono\",\n          description: \"Checkout Payment\",\n          amount: this.cartTotal * 100,\n          closed: () => {\n            this.btnDisabled = false;\n          }\n        });\n      } else {\n        this.btnDisabled = false;\n      }\n    } catch (error) {\n      this.dataService.error(error);\n    }\n  }\n\n  public onClickCancel() {\n    // If the window has been opened, this is how you can close it:\n    this.stripeCheckoutHandler.close();\n  }\n}\n","module.exports = \"<section id=\\\"categories\\\">\\n  <div class=\\\"container p-5\\\">\\n    <app-message></app-message>\\n    <h4 class=\\\"display-4\\\">Categories</h4>\\n    <hr />\\n    <div *ngIf=\\\"!categories\\\" class=\\\"m-auto\\\">\\n      <h1 class=\\\"text-center display-3 mt-5\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n      </h1>\\n    </div>\\n    <div *ngIf=\\\"categories\\\" class=\\\"list-group\\\">\\n      <a\\n        *ngFor=\\\"let category of categories\\\"\\n        routerLink=\\\"/categories/{{ category._id }}\\\"\\n        class=\\\"list-group-item list-group-item-action\\\"\\n      >\\n        {{ category.name }}\\n      </a>\\n    </div>\\n    <hr style=\\\"margin-top: 15rem;\\\" />\\n    <div class=\\\"card bg-light mt-5\\\">\\n      <div class=\\\"card-body\\\">\\n        <h4 class=\\\"card-title\\\">Add New Category</h4>\\n        <hr />\\n        <div class=\\\"form\\\">\\n          <div class=\\\"form-group\\\">\\n            <label>Category</label>\\n            <input\\n              type=\\\"text\\\"\\n              name=\\\"newCategory\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"newCategory\\\"\\n            />\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-info\\\"\\n            (click)=\\\"addCategory()\\\"\\n            [disabled]=\\\"btnDisabled\\\"\\n          >\\n            Add Category\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { DataService } from \"../data.service\";\nimport { RestApiService } from \"../rest-api.service\";\n\n@Component({\n  selector: \"app-categories\",\n  templateUrl: \"./categories.component.html\",\n  styleUrls: [\"./categories.component.scss\"]\n})\nexport class CategoriesComponent implements OnInit {\n  categories: any;\n\n  newCategory = \"\";\n  btnDisabled = false;\n\n  constructor(\n    private dataService: DataService,\n    private restService: RestApiService\n  ) {}\n\n  ngOnInit() {\n    this.restService.get(\"/api/categories\").subscribe(\n      data => {\n        data[\"success\"]\n          ? (this.categories = data[\"categories\"])\n          : this.dataService.error(data[\"message\"]);\n      },\n      error => {\n        this.dataService.error(error[\"message\"]);\n      }\n    );\n  }\n\n  addCategory() {\n    if (this.newCategory) {\n      this.btnDisabled = true;\n\n      this.restService\n        .post(\"/api/categories\", { name: this.newCategory })\n        .subscribe(\n          data => {\n            data[\"success\"]\n              ? this.dataService.success(data[\"message\"])\n              : this.dataService.error(data[\"message\"]);\n          },\n          error => {\n            this.dataService.error(error[\"message\"]);\n          },\n          () => {\n            this.btnDisabled = false;\n          }\n        );\n    }\n  }\n}\n","module.exports = \"<section id=\\\"category\\\">\\n  <div class=\\\"container p-3 p-md-5\\\">\\n    <app-message></app-message>\\n    <div *ngIf=\\\"!category\\\" class=\\\"m-auto\\\">\\n      <h1 class=\\\"text-center display-3 mt-5\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n      </h1>\\n    </div>\\n    <h3\\n      *ngIf=\\\"category && !category.products.length\\\"\\n      class=\\\"display-2 text-center mt-5\\\"\\n    >\\n      No Products inside Category\\n    </h3>\\n    <div *ngIf=\\\"category && category.products.length\\\">\\n      <p>\\n        {{ lower }}-{{ upper }} of {{ category.totalProducts }} products in\\n        {{ category.categoryName }}\\n      </p>\\n      <hr />\\n      <div class=\\\"product\\\" *ngFor=\\\"let product of category.products\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-5 col-md-2\\\">\\n            <a routerLink=\\\"/product/{{ product._id }}\\\">\\n              <img\\n                [src]=\\\"product.image\\\"\\n                alt=\\\"productImage\\\"\\n                class=\\\"img-fluid img-thumbnail\\\"\\n              />\\n            </a>\\n          </div>\\n          <div class=\\\"col-5 col-md-8\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-md-6\\\">\\n                <h5>\\n                  <a routerLink=\\\"/product/{{ product._id }}\\\">{{\\n                    product.title\\n                  }}</a>\\n                </h5>\\n                <p>\\n                  <small class=\\\"text-muted\\\">{{ product.category.id }}</small>\\n                </p>\\n                <p>{{ product.price | currency }}</p>\\n              </div>\\n              <div class=\\\"col-md-6\\\"></div>\\n            </div>\\n          </div>\\n        </div>\\n        <hr />\\n      </div>\\n      <ngb-pagination\\n        [collectionSize]=\\\"category.totalProducts\\\"\\n        [pageSize]=\\\"10\\\"\\n        [(page)]=\\\"page\\\"\\n        (pageChange)=\\\"getProducts($event)\\\"\\n      ></ngb-pagination>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3J5L2NhdGVnb3J5LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { DataService } from \"../data.service\";\nimport { RestApiService } from \"../rest-api.service\";\n\n@Component({\n  selector: \"app-category\",\n  templateUrl: \"./category.component.html\",\n  styleUrls: [\"./category.component.scss\"]\n})\nexport class CategoryComponent implements OnInit {\n  categoryId: any;\n  category: any;\n  page = 1;\n\n  constructor(\n    private dataService: DataService,\n    private route: ActivatedRoute,\n    private restService: RestApiService\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe(res => {\n      this.categoryId = res[\"id\"];\n      this.getProducts();\n    });\n  }\n\n  get lower() {\n    return 10 * (this.page - 1) + 1;\n  }\n\n  get upper() {\n    return Math.min(10 * this.page, this.category.totalProducts);\n  }\n\n  async getProducts(event?: any) {\n    if (event) {\n      this.category = null;\n    }\n\n    this.restService\n      .get(`/api/categories/${this.categoryId}?page=${this.page - 1}`)\n      .subscribe(\n        data => {\n          data[\"success\"]\n            ? (this.category = data)\n            : this.dataService.error(data[\"message\"]);\n        },\n        error => {\n          this.dataService.error(error[\"message\"]);\n        }\n      );\n  }\n}\n","import { Router, NavigationStart } from \"@angular/router\";\nimport { Injectable } from \"@angular/core\";\nimport { RestApiService } from \"./rest-api.service\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class DataService {\n  message = \"\";\n  messageType = \"danger\";\n  user: any;\n\n  cartItems = 0;\n\n  constructor(private router: Router, private restService: RestApiService) {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        this.message = \"\";\n      }\n    });\n  }\n\n  error(message) {\n    this.messageType = \"danger\";\n    this.message = message;\n  }\n\n  success(message) {\n    this.messageType = \"success\";\n    this.message = message;\n  }\n\n  warning(message) {\n    this.messageType = \"warning\";\n    this.message = message;\n  }\n\n  getProfile() {\n    if (localStorage.getItem(\"token\")) {\n      this.restService.get(\"/api/accounts/profile\").subscribe(\n        data => {\n          this.user = data[\"user\"];\n          // console.log(data[\"user\"]);\n        },\n        error => this.error(error)\n      );\n    }\n  }\n\n  getCart() {\n    const cart = localStorage.getItem(\"cart\");\n    return cart ? JSON.parse(cart) : [];\n  }\n\n  addToCart(item: string) {\n    const cart: any = this.getCart();\n    if (cart.find(data => JSON.stringify(data) === JSON.stringify(item))) {\n      return false;\n    } else {\n      cart.push(item);\n      this.cartItems++;\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n      return true;\n    }\n  }\n\n  clearCart() {\n    this.cartItems = 0;\n    localStorage.setItem(\"cart\", \"[]\");\n  }\n\n  removeFromCart(item: string) {\n    let cart: any = this.getCart();\n\n    if (cart.find(data => JSON.stringify(data) === JSON.stringify(item))) {\n      cart = cart.filter(data => JSON.stringify(data) !== JSON.stringify(item));\n\n      this.cartItems--;\n      localStorage.setItem(\"cart\", JSON.stringify(cart));\n    }\n  }\n}\n","module.exports = \"<section id=\\\"home\\\">\\n  <div class=\\\"container-fluid d-none d-md-block\\\">\\n    <ngb-carousel>\\n      <ng-template ngbSlide>\\n        <img src=\\\"assets/img/image1.jpg\\\" alt=\\\"first\\\" class=\\\"item\\\" />\\n      </ng-template>\\n      <ng-template ngbSlide>\\n        <img src=\\\"assets/img/image2.jpg\\\" alt=\\\"second\\\" class=\\\"item\\\" />\\n      </ng-template>\\n      <ng-template ngbSlide>\\n        <img src=\\\"assets/img/image3.jpg\\\" alt=\\\"third\\\" class=\\\"item\\\" />\\n      </ng-template>\\n      <!-- <ng-template ngbSlide>\\n        <img src=\\\"assets/img/image4.jpg\\\" alt=\\\"fourth\\\" class=\\\"item\\\" />\\n      </ng-template>\\n      <ng-template ngbSlide>\\n        <img src=\\\"assets/img/image5.jpg\\\" alt=\\\"fifth\\\" class=\\\"item\\\" />\\n      </ng-template> -->\\n    </ngb-carousel>\\n  </div>\\n  <div class=\\\"container p-5\\\">\\n    <app-message></app-message>\\n    <p class=\\\"lead\\\">\\n      <b>Recommended Deals: Last-Minute Deals</b>\\n    </p>\\n    <div class=\\\"row\\\">\\n      <div *ngIf=\\\"!products\\\" class=\\\"m-auto\\\">\\n        <h1 class=\\\"text-center display-3 mt-5\\\">\\n          <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n        </h1>\\n      </div>\\n      <div *ngFor=\\\"let product of products\\\" class=\\\"col-md-3 mb-5\\\">\\n        <a routerLink=\\\"/product/{{ product._id }}\\\">\\n          <div class=\\\"card bg-light\\\">\\n            <img src=\\\"{{ product.image }}\\\" alt=\\\"product\\\" class=\\\"card-img-top\\\" />\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\">{{ product.title }}</h5>\\n              <p class=\\\"card-text\\\">{{ product.price | currency }}</p>\\n            </div>\\n          </div>\\n        </a>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"ngb-carousel {\\n  min-width: 1000px;\\n  max-width: 1500px;\\n  margin-left: auto;\\n  margin-right: auto; }\\n\\n.item {\\n  position: relative;\\n  left: 50%;\\n  -webkit-transform: translateX(-50%);\\n          transform: translateX(-50%); }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9kOlxcTm9kZWpzXFxBbmd1bGFyXFxhbWF6b25cXGZyb250ZW5kL3NyY1xcYXBwXFxob21lXFxob21lLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0VBQ2pCLGlCQUFpQjtFQUNqQixpQkFBaUI7RUFDakIsa0JBQWtCLEVBQUE7O0FBR3BCO0VBQ0Usa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxtQ0FBNkI7VUFBN0IsMkJBQTZCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJuZ2ItY2Fyb3VzZWwge1xyXG4gIG1pbi13aWR0aDogMTAwMHB4O1xyXG4gIG1heC13aWR0aDogMTUwMHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogYXV0bztcclxufVxyXG5cclxuLml0ZW0ge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBsZWZ0OiA1MCU7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKCgtNTAlKSk7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { DataService } from \"../data.service\";\nimport { RestApiService } from \"../rest-api.service\";\n\n@Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.component.html\",\n  styleUrls: [\"./home.component.scss\"]\n})\nexport class HomeComponent implements OnInit {\n  products: any;\n\n  constructor(\n    private dataService: DataService,\n    private restService: RestApiService\n  ) {}\n\n  ngOnInit() {\n    this.restService.get(\"/api/products\").subscribe(\n      data => {\n        data[\"success\"]\n          ? (this.products = data[\"products\"])\n          : this.dataService.error(\"Could not fetch products.\");\n      },\n      error => {\n        this.dataService.error(error[\"message\"]);\n      }\n    );\n  }\n}\n","module.exports = \"<section id=\\\"loginPage\\\">\\n  <div class=\\\"container p-5\\\">\\n    <div class=\\\"row mt-5\\\">\\n      <div class=\\\"col-lg-4 offset-lg-4\\\">\\n        <app-message></app-message>\\n        <div class=\\\"card bg-light\\\">\\n          <div class=\\\"card-body\\\">\\n            <h4 class=\\\"text-center\\\">Login</h4>\\n            <hr />\\n            <form>\\n              <div class=\\\"form-group\\\">\\n                <label>Email</label>\\n                <input\\n                  type=\\\"email\\\"\\n                  name=\\\"email\\\"\\n                  class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"email\\\"\\n                />\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label>Password</label>\\n                <input\\n                  type=\\\"password\\\"\\n                  name=\\\"password\\\"\\n                  class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"password\\\"\\n                />\\n              </div>\\n              <hr />\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-primary btn-block\\\"\\n                (click)=\\\"login()\\\"\\n                [disabled]=\\\"btnDisabled\\\"\\n              >\\n                Login\\n              </button>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { RestApiService } from \"../rest-api.service\";\nimport { DataService } from \"../data.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"]\n})\nexport class LoginComponent implements OnInit {\n  email = \"\";\n  password = \"\";\n\n  btnDisabled = false;\n\n  constructor(\n    private router: Router,\n    private restService: RestApiService,\n    private dataService: DataService\n  ) {}\n\n  ngOnInit() {}\n\n  validate() {\n    if (this.email) {\n      if (this.password) {\n        return true;\n      } else {\n        this.dataService.error(\"Password is not entered\");\n      }\n    } else {\n      this.dataService.error(\"Email is not entered.\");\n    }\n  }\n\n  login() {\n    if (this.validate()) {\n      this.btnDisabled = true;\n\n      this.restService\n        .post(\"/api/accounts/login\", {\n          email: this.email,\n          password: this.password\n        })\n        .subscribe(\n          data => {\n            if (data[\"success\"]) {\n              localStorage.setItem(\"token\", data[\"token\"]);\n              this.dataService.getProfile();\n              this.router.navigate([\"/\"]);\n            } else {\n              this.dataService.error(data[\"message\"]);\n            }\n          },\n          error => {\n            this.dataService.error(error[\"message\"]);\n          },\n          () => {\n            this.btnDisabled = false;\n          }\n        );\n    }\n  }\n}\n","module.exports = \"<p *ngIf=\\\"dataService.message\\\">\\n  <ngb-alert [type]=\\\"dataService.messageType\\\" [dismissible]=\\\"false\\\">\\n    {{ dataService.message }}\\n  </ngb-alert>\\n</p>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lc3NhZ2UvbWVzc2FnZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { DataService } from \"../data.service\";\n\n@Component({\n  selector: \"app-message\",\n  templateUrl: \"./message.component.html\",\n  styleUrls: [\"./message.component.scss\"]\n})\nexport class MessageComponent implements OnInit {\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {}\n}\n","module.exports = \"<section id=\\\"myProducts\\\">\\n  <div class=\\\"container p-5\\\">\\n    <app-message></app-message>\\n    <div *ngIf=\\\"!products\\\" class=\\\"m-auto\\\">\\n      <h1 class=\\\"text-center display-3 mt-5\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n      </h1>\\n    </div>\\n    <h3 *ngIf=\\\"products && !products.length\\\" class=\\\"display-2 text-center mt-5\\\">\\n      My Products is Empty\\n    </h3>\\n    <div *ngIf=\\\"products && products.length\\\" class=\\\"row\\\">\\n      <div class=\\\"col\\\">\\n        <h4 class=\\\"display-4\\\">My Products</h4>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"offset-10 col-2 d-none d-md-block\\\">\\n            <p>\\n              <small class=\\\"text-muted\\\">Price</small>\\n            </p>\\n          </div>\\n        </div>\\n        <hr class=\\\"mt-0\\\" />\\n        <div *ngFor=\\\"let product of products\\\" class=\\\"product\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-4 col-md-2\\\">\\n              <a routerLink=\\\"/product/{{ product.id }}\\\">\\n                <img\\n                  src=\\\"{{ product.image }}\\\"\\n                  alt=\\\"image\\\"\\n                  class=\\\"img-fluid img-thumbnail\\\"\\n                />\\n              </a>\\n            </div>\\n            <div class=\\\"col-5 col-md-8\\\">\\n              <h5>\\n                <a routerLink=\\\"/product/{{ product.id }}\\\">{{\\n                  product.title\\n                }}</a>\\n                <p class=\\\"m-0\\\">\\n                  <small class=\\\"text-muted\\\">{{ product.category.name }}</small>\\n                </p>\\n              </h5>\\n            </div>\\n            <div class=\\\"col-2\\\">\\n              <h6 class=\\\"font-weight-bold text-danger\\\">\\n                {{ product.price | currency }}\\n              </h6>\\n            </div>\\n          </div>\\n          <hr />\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL215LXByb2R1Y3RzL215LXByb2R1Y3RzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { DataService } from \"../data.service\";\nimport { RestApiService } from \"../rest-api.service\";\n\n@Component({\n  selector: \"app-my-products\",\n  templateUrl: \"./my-products.component.html\",\n  styleUrls: [\"./my-products.component.scss\"]\n})\nexport class MyProductsComponent implements OnInit {\n  products: any;\n\n  constructor(\n    private dataService: DataService,\n    private restService: RestApiService\n  ) {}\n\n  ngOnInit() {\n    this.restService.get(\"/api/seller/products\").subscribe(\n      data => {\n        data[\"success\"]\n          ? (this.products = data[\"products\"])\n          : this.dataService.error(data[\"message\"]);\n      },\n      error => {\n        this.dataService.error(error[\"message\"]);\n      }\n    );\n  }\n}\n","module.exports = \"<section id=\\\"postProduct\\\">\\n  <div class=\\\"container p-5\\\">\\n    <h4 class=\\\"display-4\\\">Post a Product for Sale</h4>\\n    <hr />\\n    <app-message></app-message>\\n    <div *ngIf=\\\"!categories\\\" class=\\\"m-auto\\\">\\n      <h1 class=\\\"text-center display-3 mt-5\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n      </h1>\\n    </div>\\n    <div *ngIf=\\\"categories\\\" class=\\\"card bg-light\\\">\\n      <div class=\\\"card-body\\\">\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">Title</label>\\n            <input\\n              type=\\\"text\\\"\\n              name=\\\"title\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"product.title\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">Price</label>\\n            <input\\n              type=\\\"number\\\"\\n              name=\\\"price\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"product.price\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Category</label>\\n            <select\\n              name=\\\"categoryId\\\"\\n              [(ngModel)]=\\\"product.categoryId\\\"\\n              class=\\\"custom-select\\\"\\n            >\\n              <option\\n                *ngFor=\\\"let category of categories\\\"\\n                [value]=\\\"category._id\\\"\\n              >\\n                {{ category.name }}\\n              </option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Description</label>\\n            <textarea\\n              class=\\\"form-control\\\"\\n              name=\\\"description\\\"\\n              rows=\\\"5\\\"\\n              [(ngModel)]=\\\"product.description\\\"\\n            ></textarea>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label>Upload Image</label>\\n            <input\\n              type=\\\"file\\\"\\n              class=\\\"form-control-file\\\"\\n              accept=\\\"image/*\\\"\\n              name=\\\"file\\\"\\n              (change)=\\\"fileChange($event)\\\"\\n            />\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-success\\\"\\n            (click)=\\\"post()\\\"\\n            [disabled]=\\\"btnDisabled\\\"\\n          >\\n            Post\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BvcnRwcm9kdWN0L3BvcnRwcm9kdWN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { DataService } from \"../data.service\";\nimport { RestApiService } from \"../rest-api.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-portproduct\",\n  templateUrl: \"./portproduct.component.html\",\n  styleUrls: [\"./portproduct.component.scss\"]\n})\nexport class PortproductComponent implements OnInit {\n  product = {\n    title: \"\",\n    price: 0,\n    categoryId: \"\",\n    description: \"\",\n    product_picture: null\n  };\n\n  categories: any;\n  btnDisabled = false;\n\n  constructor(\n    private dataService: DataService,\n    private restService: RestApiService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.restService.get(\"/api/categories\").subscribe(\n      data => {\n        data[\"success\"]\n          ? (this.categories = data[\"categories\"])\n          : this.dataService.error(data[\"message\"]);\n      },\n      error => {\n        this.dataService.error(error[\"message\"]);\n      }\n    );\n  }\n\n  validate(product) {\n    if (product.title) {\n      if (product.price) {\n        if (product.categoryId) {\n          if (product.description) {\n            if (product.product_picture) {\n              return true;\n            } else {\n              this.dataService.error(\"Please select product image.\");\n            }\n          } else {\n            this.dataService.error(\"Please enter description.\");\n          }\n        } else {\n          this.dataService.error(\"Please select category.\");\n        }\n      } else {\n        this.dataService.error(\"Please enter a price.\");\n      }\n    } else {\n      this.dataService.error(\"Please enter a title.\");\n    }\n  }\n\n  fileChange(event: any) {\n    this.product.product_picture = event.target.files[0];\n  }\n\n  async post() {\n    this.btnDisabled = true;\n\n    if (this.validate(this.product)) {\n      const form = new FormData();\n\n      for (const key in this.product) {\n        if (this.product.hasOwnProperty(key)) {\n          if (key === \"product_picture\") {\n            form.append(\n              \"product_picture\",\n              this.product.product_picture,\n              this.product.product_picture.name\n            );\n          } else {\n            form.append(key, this.product[key]);\n          }\n        }\n      }\n      \n      this.restService.post(\"/api/seller/products\", form).subscribe(\n        data => {\n          data[\"success\"]\n            ? this.router\n                .navigate([\"/profile/myproducts\"])\n                .then(() => this.dataService.success(data[\"message\"]))\n                .catch(error => this.dataService.error(error))\n            : this.dataService.error(data[\"message\"]);\n        },\n        error => {\n          this.dataService.error(error[\"message\"]);\n        },\n        () => {\n          this.btnDisabled = false;\n        }\n      );\n    }\n  }\n}\n","module.exports = \"<section id=\\\"product\\\">\\n  <div class=\\\"container-fluid p-5\\\">\\n    <app-message></app-message>\\n    <div *ngIf=\\\"!product\\\" class=\\\"m-auto\\\">\\n      <h1 class=\\\"text-center display-3 mt-5\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n      </h1>\\n    </div>\\n    <div *ngIf=\\\"product\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-4\\\">\\n          <img\\n            [src]=\\\"product.image\\\"\\n            alt=\\\"productImage\\\"\\n            class=\\\"image img-thumbnail\\\"\\n          />\\n        </div>\\n        <div class=\\\"col-lg-5\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <h4>{{ product.title }}</h4>\\n              <p class=\\\"m-0\\\">\\n                <small>by {{ product.owner.name }}</small>\\n              </p>\\n              <p class=\\\"m-0\\\">\\n                <small class=\\\"text-muted\\\">{{ product.category.name }}</small>\\n              </p>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <ngb-rating\\n                [(rate)]=\\\"product.averageRating\\\"\\n                [starTemplate]=\\\"t\\\"\\n                [readonly]=\\\"true\\\"\\n                max=\\\"5\\\"\\n              ></ngb-rating>\\n            </div>\\n          </div>\\n          <hr />\\n          <p class=\\\"lead\\\">{{ product.description }}</p>\\n        </div>\\n        <div class=\\\"col-lg-3\\\">\\n          <div class=\\\"card bg-light\\\">\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\">Price: {{ product.price | currency }}</h5>\\n              <br />\\n              <br />\\n              <a (click)=\\\"addToCart()\\\" class=\\\"btn btn-warning btn-block\\\"\\n                >Add to Cart</a\\n              >\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div>\\n        <div class=\\\"mt-5 ml-lg-5\\\">\\n          <h4>Reviews</h4>\\n          <hr />\\n          <div class=\\\"reviews\\\">\\n            <div *ngFor=\\\"let review of product.reviews\\\" class=\\\"review\\\">\\n              <div class=\\\"p-3\\\">\\n                <img\\n                  [src]=\\\"review.owner.picture\\\"\\n                  alt=\\\"\\\"\\n                  width=\\\"75px\\\"\\n                  class=\\\"rounded-circle\\\"\\n                />\\n                <p class=\\\"lead d-inline ml-3\\\">{{ review.owner.name }}</p>\\n                <br />\\n                <br />\\n                <ngb-rating\\n                  [(rate)]=\\\"review.rating\\\"\\n                  [starTemplate]=\\\"t\\\"\\n                  [readonly]=\\\"true\\\"\\n                  max=\\\"5\\\"\\n                ></ngb-rating>\\n                <p class=\\\"ml-2 d-inline font-weight-bold\\\">{{ review.title }}</p>\\n                <p class=\\\"mt-3\\\">{{ review.description }}</p>\\n              </div>\\n              <hr />\\n            </div>\\n            <div class=\\\"card bg-light my-5\\\">\\n              <div class=\\\"card-body\\\">\\n                <h4 class=\\\"card-title\\\">Add a review</h4>\\n                <hr />\\n                <div class=\\\"form\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label>Title</label>\\n                    <input\\n                      type=\\\"text\\\"\\n                      name=\\\"title\\\"\\n                      class=\\\"form-control\\\"\\n                      [(ngModel)]=\\\"myReview.title\\\"\\n                    />\\n                  </div>\\n                  <div class=\\\"form-group\\\">\\n                    <label>Description</label>\\n                    <textarea\\n                      class=\\\"form-control\\\"\\n                      rows=\\\"5\\\"\\n                      name=\\\"description\\\"\\n                      [(ngModel)]=\\\"myReview.description\\\"\\n                    ></textarea>\\n                  </div>\\n                  <label>Rating</label>\\n                  <br />\\n                  <ngb-rating\\n                    [(rate)]=\\\"myReview.rating\\\"\\n                    [starTemplate]=\\\"t\\\"\\n                    [readonly]=\\\"false\\\"\\n                    max=\\\"5\\\"\\n                  ></ngb-rating>\\n                  <br />\\n                  <br />\\n                  <button\\n                    type=\\\"button\\\"\\n                    class=\\\"btn btn-info\\\"\\n                    (click)=\\\"postReview()\\\"\\n                    [disabled]=\\\"btnDisabled\\\"\\n                  >\\n                    Post Review\\n                  </button>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\\n<ng-template #t let-fill=\\\"fill\\\">\\n  <span *ngIf=\\\"fill === 100\\\" class=\\\"star full\\\">&#9733;</span>\\n  <span *ngIf=\\\"fill === 0\\\" class=\\\"star\\\">&#9733;</span>\\n  <span *ngIf=\\\"fill < 100 && fill > 0\\\" class=\\\"star\\\">\\n    <span class=\\\"half\\\" [style.width.%]=\\\"fill\\\">&#9733;</span>&#9733;\\n  </span>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1Y3QvcHJvZHVjdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { DataService } from \"../data.service\";\nimport { RestApiService } from \"../rest-api.service\";\n\n@Component({\n  selector: \"app-product\",\n  templateUrl: \"./product.component.html\",\n  styleUrls: [\"./product.component.scss\"]\n})\nexport class ProductComponent implements OnInit {\n  myReview = {\n    title: \"\",\n    description: \"\",\n    rating: 0\n  };\n  btnDisabled = false;\n\n  product: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: DataService,\n    private restService: RestApiService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe(res => {\n      this.restService.get(`/api/product/${res[\"id\"]}`).subscribe(\n        data => {\n          data[\"success\"]\n            ? (this.product = data[\"product\"])\n            : this.router.navigate([\"/\"]);\n        },\n        error => this.dataService.error(error[\"message\"])\n      );\n    });\n  }\n\n  postReview() {\n    this.btnDisabled = true;\n\n    this.restService\n      .post(\"/api/review\", {\n        productId: this.product._id,\n        title: this.myReview.title,\n        description: this.myReview.description,\n        rating: this.myReview.rating\n      })\n      .subscribe(\n        data => {\n          data[\"success\"]\n            ? this.dataService.success(data[\"message\"])\n            : this.dataService.error(data[\"message\"]);\n        },\n        error => {\n          this.dataService.error(error[\"message\"]);\n        },\n        () => {\n          this.btnDisabled = false;\n        }\n      );\n  }\n\n  addToCart() {\n    this.dataService.addToCart(this.product)\n      ? this.dataService.success(\"Product successfully added to cart\")\n      : this.dataService.error(\"Product has already been added to cart\");\n  }\n}\n","module.exports = \"<section id=\\\"profile\\\">\\n  <div class=\\\"container p-5\\\">\\n    <h4 class=\\\"display-4\\\">My Profile</h4>\\n    <hr />\\n    <div *ngIf=\\\"!dataService.user\\\" class=\\\"m-auto\\\">\\n      <h1 class=\\\"text-center display-3 mt-5\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n      </h1>\\n    </div>\\n    <div *ngIf=\\\"dataService.user\\\" class=\\\"row mt-5\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <img\\n          [src]=\\\"dataService.user.picture\\\"\\n          alt=\\\"userimage\\\"\\n          class=\\\"rounded-circle image\\\"\\n        />\\n      </div>\\n      <div class=\\\"col-md-8 ml-3\\\">\\n        <p id=\\\"name\\\" class=\\\"lead\\\">{{ dataService.user.name }}</p>\\n        <a routerLink=\\\"/profile/orders\\\" class=\\\"btn btn-warning\\\">My Orders</a>\\n        <br />\\n        <br />\\n        <a routerLink=\\\"/profile/settings\\\" class=\\\"btn btn-warning\\\"\\n          >Change Account Settings</a\\n        >\\n        <br />\\n        <br />\\n        <a routerLink=\\\"/profile/address\\\" class=\\\"btn btn-warning\\\"\\n          >Change Shipping Address</a\\n        >\\n        <br />\\n        <br />\\n        <div *ngIf=\\\"dataService.user.isSeller\\\">\\n          <p class=\\\"lead\\\">Seller Actions</p>\\n          <hr />\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 mb-3\\\">\\n              <a\\n                routerLink=\\\"/profile/postproduct\\\"\\n                class=\\\"btn btn-outline-success btn-block\\\"\\n                >Post Product for Sale</a\\n              >\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n              <a\\n                routerLink=\\\"/profile/myproducts\\\"\\n                class=\\\"btn btn-outline-info btn-block\\\"\\n                >My Products</a\\n              >\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"#name {\\n  font-size: 2rem; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvZmlsZS9kOlxcTm9kZWpzXFxBbmd1bGFyXFxhbWF6b25cXGZyb250ZW5kL3NyY1xcYXBwXFxwcm9maWxlXFxwcm9maWxlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiI25hbWUge1xyXG4gIGZvbnQtc2l6ZTogMnJlbTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { DataService } from \"../data.service\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.component.html\",\n  styleUrls: [\"./profile.component.scss\"]\n})\nexport class ProfileComponent implements OnInit {\n  constructor(private dataService: DataService) {}\n\n  ngOnInit() {}\n}\n","module.exports = \"<section id=\\\"registrationPage\\\">\\n  <div class=\\\"container p-5\\\">\\n    <div class=\\\"row mt-5\\\">\\n      <div class=\\\"col-lg-4 offset-lg-4\\\">\\n        <app-message></app-message>\\n        <div class=\\\"card bg-light\\\">\\n          <div class=\\\"card-body\\\">\\n            <h4 class=\\\"text-center\\\">Registration</h4>\\n            <hr />\\n            <form>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Name</label>\\n                <input\\n                  type=\\\"text\\\"\\n                  name=\\\"name\\\"\\n                  class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"name\\\"\\n                />\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Email</label>\\n                <input\\n                  type=\\\"email\\\"\\n                  name=\\\"email\\\"\\n                  class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"email\\\"\\n                />\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Password</label>\\n                <input\\n                  type=\\\"password\\\"\\n                  name=\\\"password\\\"\\n                  class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"password\\\"\\n                />\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"form-control-label\\\">Confirm Password</label>\\n                <input\\n                  type=\\\"password\\\"\\n                  name=\\\"password1\\\"\\n                  class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"password1\\\"\\n                />\\n              </div>\\n              <div class=\\\"form-check\\\">\\n                <label class=\\\"form-check-label\\\">\\n                  <input\\n                    type=\\\"checkbox\\\"\\n                    name=\\\"isSeller\\\"\\n                    class=\\\"form-check-input\\\"\\n                    [(ngModel)]=\\\"isSeller\\\"\\n                  />\\n                  Register as Seller\\n                </label>\\n              </div>\\n              <hr />\\n              <button\\n                type=\\\"button\\\"\\n                class=\\\"btn btn-primary btn-block\\\"\\n                (click)=\\\"register()\\\"\\n                [disabled]=\\\"btnDisabled\\\"\\n              >\\n                Register\\n              </button>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdHJhdGlvbi9yZWdpc3RyYXRpb24uY29tcG9uZW50LnNjc3MifQ== */\"","import { Router } from \"@angular/router\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { DataService } from \"../data.service\";\nimport { RestApiService } from \"../rest-api.service\";\n\n@Component({\n  selector: \"app-registration\",\n  templateUrl: \"./registration.component.html\",\n  styleUrls: [\"./registration.component.scss\"]\n})\nexport class RegistrationComponent implements OnInit {\n  name = \"\";\n  email = \"\";\n  password = \"\";\n  password1 = \"\";\n  isSeller = false;\n\n  btnDisabled = false;\n\n  constructor(\n    private router: Router,\n    private dataService: DataService,\n    private restService: RestApiService\n  ) {}\n\n  ngOnInit() {}\n\n  validate() {\n    if (this.name) {\n      if (this.email) {\n        if (this.password) {\n          if (this.password1) {\n            if (this.password === this.password1) {\n              return true;\n            } else {\n              this.dataService.error(\"Passwords do not match.\");\n            }\n          } else {\n            this.dataService.error(\"Confirmation Password is not entered\");\n          }\n        } else {\n          this.dataService.error(\"Password is not entered\");\n        }\n      } else {\n        this.dataService.error(\"Email is not entered.\");\n      }\n    } else {\n      this.dataService.error(\"Name is not entered.\");\n    }\n  }\n\n  register() {\n    if (this.validate()) {\n      this.btnDisabled = true;\n      this.restService\n        .post(\"/api/accounts/signup\", {\n          name: this.name,\n          email: this.email,\n          password: this.password,\n          isSeller: this.isSeller\n        })\n        .subscribe(\n          data => {\n            if (data[\"success\"]) {\n              localStorage.setItem(\"token\", data[\"token\"]);\n              // this.dataService.success(\"Registration successful!\");\n\n              this.dataService.getProfile();\n              \n              this.router\n                .navigate([\"profile/address\"])\n                .then(() => {\n                  this.dataService.success(\n                    \"Registration successful! Please enter your shipping address below\"\n                  );\n                })\n                .catch(err => this.dataService.error(err));\n            } else {\n              this.dataService.error(data[\"message\"]);\n            }\n          },\n          error => this.dataService.error(error[\"message\"]),\n          () => {\n            this.btnDisabled = false;\n          }\n        );\n    }\n  }\n}\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { Injectable } from \"@angular/core\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class RestApiService {\n  constructor(private http: HttpClient) {}\n\n  get(link: string): Observable<any> {\n    return this.http.get(link);\n  }\n\n  post(link: string, body: any): Observable<any> {\n    return this.http.post(link, body);\n  }\n}\n","module.exports = \"<section id=\\\"search\\\">\\n  <div class=\\\"container p-3 p-md-5\\\">\\n    <app-message></app-message>\\n    <div *ngIf=\\\"!content\\\" class=\\\"m-auto\\\">\\n      <h1 class=\\\"text-center display-3 mt-5\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n      </h1>\\n    </div>\\n    <h3 *ngIf=\\\"content && !content.nbHits\\\" class=\\\"display-2 text-center mt-5\\\">\\n      No Results\\n    </h3>\\n    <div *ngIf=\\\"content && content.nbHits\\\">\\n      <p>\\n        {{ lower }}-{{ upper }} of {{ content.nbHits }} results for\\n        <span class=\\\"text-warning\\\">\\\"{{ query }}\\\"</span>\\n      </p>\\n      <hr />\\n      <div class=\\\"product\\\" *ngFor=\\\"let product of content.hits\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-5 col-md-2\\\">\\n            <a routerLink=\\\"/product/{{ product.objectID }}\\\">\\n              <img\\n                [src]=\\\"product.image\\\"\\n                alt=\\\"productImage\\\"\\n                class=\\\"img-fluid img-thumbnail\\\"\\n              />\\n            </a>\\n          </div>\\n          <div class=\\\"col-5 col-md-8\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-12 col-md-6\\\">\\n                <h5>\\n                  <a routerLink=\\\"/product/{{ product.objectID }}\\\">{{\\n                    product.title\\n                  }}</a>\\n                </h5>\\n                <p>\\n                  <small>by {{ product.owner.name }}</small>\\n                </p>\\n                <p>{{ product.price | currency }}</p>\\n              </div>\\n              <div class=\\\"col-md-6\\\">\\n                <ngb-rating\\n                  [(rate)]=\\\"product.averageRating\\\"\\n                  [starTemplate]=\\\"t\\\"\\n                  [readonly]=\\\"true\\\"\\n                  max=\\\"5\\\"\\n                ></ngb-rating>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <hr />\\n      </div>\\n      <ngb-pagination\\n        [collectionSize]=\\\"content.nbHits\\\"\\n        [pageSize]=\\\"20\\\"\\n        [(page)]=\\\"page\\\"\\n        (pageChange)=\\\"getProducts()\\\"\\n      ></ngb-pagination>\\n    </div>\\n  </div>\\n</section>\\n\\n<ng-template #t let-fill=\\\"fill\\\">\\n  <span *ngIf=\\\"fill === 100\\\" class=\\\"star full\\\">&#9733;</span>\\n  <span *ngIf=\\\"fill === 0\\\" class=\\\"star\\\">&#9733;</span>\\n  <span *ngIf=\\\"fill < 100 && fill > 0\\\" class=\\\"star\\\">\\n    <span class=\\\"half\\\" [style.width.%]=\\\"fill\\\">&#9733;</span>&#9733;\\n  </span>\\n</ng-template>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlYXJjaC9zZWFyY2guY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { DataService } from \"../data.service\";\nimport { RestApiService } from \"../rest-api.service\";\n\n@Component({\n  selector: \"app-search\",\n  templateUrl: \"./search.component.html\",\n  styleUrls: [\"./search.component.scss\"]\n})\nexport class SearchComponent implements OnInit {\n  query: string;\n  page = 1;\n\n  content: any;\n\n  constructor(\n    private route: ActivatedRoute,\n    private dataService: DataService,\n    private restService: RestApiService\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe(res => {\n      this.query = res[\"query\"];\n      this.page = 1;\n      this.getProducts();\n    });\n  }\n\n  get lower() {\n    return 1 + this.content.hitsPerPage * this.content.page;\n  }\n\n  get upper() {\n    return Math.min(\n      this.content.hitsPerPage * (this.content.page + 1),\n      this.content.nbHits\n    );\n  }\n\n  getProducts() {\n    this.content = null;\n\n    this.restService\n      .get(`/api/search?query=${this.query}&page=${this.page - 1}`)\n      .subscribe(\n        data => {\n          data[\"success\"]\n            ? (this.content = data[\"content\"])\n            : this.dataService.error(data[\"message\"]);\n        },\n        error => {\n          this.dataService.error(error[\"message\"]);\n        }\n      );\n  }\n}\n","module.exports = \"<section id=\\\"settings\\\">\\n  <div class=\\\"container p-5\\\">\\n    <h4 class=\\\"display-4\\\">My Account Settings</h4>\\n    <hr />\\n    <app-message></app-message>\\n    <div *ngIf=\\\"!currentSettings\\\" class=\\\"m-auto\\\">\\n      <h1 class=\\\"text-center display-3 mt-5\\\">\\n        <i class=\\\"fa fa-spinner fa-spin\\\"></i>\\n      </h1>\\n    </div>\\n    <div *ngIf=\\\"currentSettings\\\" class=\\\"card bg-light\\\">\\n      <div class=\\\"card-body\\\">\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">Name</label>\\n            <input\\n              type=\\\"text\\\"\\n              name=\\\"name\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"currentSettings.name\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">Email</label>\\n            <input\\n              type=\\\"email\\\"\\n              name=\\\"email\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"currentSettings.email\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-check\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input\\n                type=\\\"checkbox\\\"\\n                name=\\\"isSeller\\\"\\n                class=\\\"form-check-input\\\"\\n                [(ngModel)]=\\\"currentSettings.isSeller\\\"\\n              />\\n              Is Seller\\n            </label>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">New Password</label>\\n            <input\\n              type=\\\"password\\\"\\n              name=\\\"newPwd\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"currentSettings.newPwd\\\"\\n            />\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-control-label\\\">Confirm Password</label>\\n            <input\\n              type=\\\"password\\\"\\n              name=\\\"pwdConfirm\\\"\\n              class=\\\"form-control\\\"\\n              [(ngModel)]=\\\"currentSettings.pwdConfirm\\\"\\n            />\\n          </div>\\n          <button\\n            type=\\\"button\\\"\\n            class=\\\"btn btn-danger\\\"\\n            (click)=\\\"update()\\\"\\n            [disabled]=\\\"btnDisabled\\\"\\n          >\\n            Update\\n          </button>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</section>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NldHRpbmdzL3NldHRpbmdzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { DataService } from \"../data.service\";\nimport { RestApiService } from \"../rest-api.service\";\n\n@Component({\n  selector: \"app-settings\",\n  templateUrl: \"./settings.component.html\",\n  styleUrls: [\"./settings.component.scss\"]\n})\nexport class SettingsComponent implements OnInit {\n  btnDisabled = false;\n  currentSettings: any;\n\n  constructor(\n    private dataService: DataService,\n    private restService: RestApiService\n  ) {}\n\n  async ngOnInit() {\n    if (!this.dataService.user) {\n      this.restService.get(\"/api/accounts/profile\").subscribe(data => {\n        this.currentSettings = Object.assign(\n          {\n            newPwd: \"\",\n            pwdConfirm: \"\"\n          },\n          data[\"user\"]\n        );\n      });\n    } else {\n      this.currentSettings = Object.assign(\n        {\n          newPwd: \"\",\n          pwdConfirm: \"\"\n        },\n        this.dataService.user\n      );\n    }\n  }\n\n  validate(settings) {\n    if (settings[\"name\"]) {\n      if (settings[\"email\"]) {\n        if (settings[\"newPwd\"]) {\n          if (settings[\"pwdConfirm\"]) {\n            if (settings[\"newPwd\"] === settings[\"pwdConfirm\"]) {\n              return true;\n            } else {\n              this.dataService.error(\"Passwords do not match.\");\n            }\n          } else {\n            this.dataService.error(\"Please enter confirmation password.\");\n          }\n        } else {\n          this.dataService.error(\"Please enter new password.\");\n        }\n      } else {\n        this.dataService.error(\"Please enter your email.\");\n      }\n    } else {\n      this.dataService.error(\"Please enter your name.\");\n    }\n  }\n\n  update() {\n    if (this.validate(this.currentSettings)) {\n      this.btnDisabled = true;\n      this.restService\n        .post(\"/api/accounts/profile\", {\n          name: this.currentSettings[\"name\"],\n          email: this.currentSettings[\"email\"],\n          password: this.currentSettings[\"newPwd\"],\n          isSeller: this.currentSettings[\"isSeller\"]\n        })\n        .subscribe(\n          data => {\n            data[\"success\"]\n              ? (this.dataService.getProfile(),\n                this.dataService.success(data[\"message\"]))\n              : this.dataService.error(data[\"message\"]);\n          },\n          error => {\n            this.dataService.error(error[\"message\"]);\n          },\n          () => {\n            this.btnDisabled = false;\n          }\n        );\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor() {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    if (token) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          Authorization: token\r\n        }\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}